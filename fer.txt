<!-- Komponen Livewire Blade (contoh: stok-masuk.blade.php) -->
<div>
    <select id="supplier-select" wire:model="supplier_id">
        <option value="">-- Pilih Supplier --</option>
        @foreach($suppliers as $supplier)
            <option value="{{ $supplier->id }}">{{ $supplier->nama_supplier }}</option>
        @endforeach
    </select>
</div>

<!-- Langsung letakkan script di bawah -->
<script src="https://cdn.jsdelivr.net/npm/tom-select@2.2.2/dist/js/tom-select.complete.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/tom-select@2.2.2/dist/css/tom-select.css" rel="stylesheet">

<script>
    document.addEventListener("DOMContentLoaded", function () {
        new TomSelect('#supplier-select', {
            create: false,
            allowEmptyOption: true,
            placeholder: '-- Pilih Supplier --',
            onChange(value) {
                @this.set('supplier_id', value);
            }
        });
    });

    Livewire.hook('message.processed', (message, component) => {
        if (!document.querySelector('#supplier-select.tomselected')) {
            new TomSelect('#supplier-select', {
                create: false,
                allowEmptyOption: true,
                placeholder: "-- Pilih Supplier --",
                onChange(value) {
                    Livewire.find(component.id).set('supplier_id', value);
                }
            });
        }
    });
</script>

langsung inject nanti coba

<?php

namespace App\Livewire;

use Livewire\Component;
use App\Models\Produk;
use App\Models\StokKeluar;
use App\Models\StokKeluarItem;
use Livewire\WithPagination;

class StokKeluarDetailComponent extends Component
{
    use WithPagination;

    public $stokKeluarId;
    public $stokKeluar;
    public $items = [];

    public $produk_id, $jumlah, $harga_jual;
    public $produkList = [];
    public $editItemId = null;

    public function mount($id)
    {
        $this->stokKeluarId = $id;
        $this->stokKeluar = StokKeluar::findOrFail($id);
        $this->produkList = Produk::all();
        $this->loadItems();
    }

    public function rules()
    {
        return [
            'produk_id' => 'required|exists:produk,id',
            'jumlah' => 'required|numeric|min:1',
            'harga_jual' => 'required|numeric|min:0',
        ];
    }

    public function store()
    {
        $data = $this->validate();

        if ($this->editItemId) {
            $item = StokKeluarItem::findOrFail($this->editItemId);
            $oldJumlah = $item->jumlah;

            $item->update($data);

            // Update stok produk (kembalikan stok lama, kurangi stok baru)
            $produk = Produk::find($data['produk_id']);
            $produk->stok += $oldJumlah;       // balikin dulu
            $produk->stok -= $data['jumlah'];  // kurangi stok baru
            $produk->save();

            $this->editItemId = null;
        } else {
            StokKeluarItem::create([
                'stok_keluar_id' => $this->stokKeluarId,
                'produk_id' => $data['produk_id'],
                'jumlah' => $data['jumlah'],
                'harga_jual' => $data['harga_jual'],
            ]);

            // Kurangi stok dari produk
            $produk = Produk::find($data['produk_id']);
            $produk->stok -= $data['jumlah'];
            $produk->save();
        }

        $this->resetForm();
        $this->loadItems();
        session()->flash('message', 'Item berhasil disimpan.');
    }

    public function editItem($id)
    {
        $item = StokKeluarItem::findOrFail($id);
        $this->editItemId = $item->id;
        $this->produk_id = $item->produk_id;
        $this->jumlah = $item->jumlah;
        $this->harga_jual = $item->harga_jual;
    }

    public function delete($id)
    {
        $item = StokKeluarItem::findOrFail($id);
        $produk = Produk::find($item->produk_id);

        if ($produk) {
            $produk->stok += $item->jumlah;
            $produk->save();
        }

        $item->delete();

        $this->loadItems();
        session()->flash('message', 'Item berhasil dihapus.');
    }

    public function loadItems()
    {
        $this->items = StokKeluarItem::with('produk')
            ->where('stok_keluar_id', $this->stokKeluarId)
            ->get();
    }

    public function resetForm()
    {
        $this->produk_id = null;
        $this->jumlah = null;
        $this->harga_jual = null;
    }

    public function render()
    {
        return view('livewire.stok-keluar-detail-component', [
            'items' => $this->items,
        ]);
    }
}

 <form wire:submit.prevent="store" class="mb-6">
        <div class="grid grid-cols-1 md:grid-cols-6 gap-4 items-end">

            {{-- Produk --}}
            <div>
                <label for="produk_id" class="block text-sm font-medium text-gray-700">Produk</label>
                <select id="produk_id" wire:model="produk_id"
                    class="mt-1 block w-full border border-gray-300 rounded px-2 py-1">
                    <option value="">-- Pilih Produk --</option>
                    @foreach ($produkList as $produk)
                        <option value="{{ $produk->id }}">{{ $produk->nama_produk }}</option>
                    @endforeach
                </select>
                @error('produk_id') <span class="text-red-500 text-sm mt-1 block">{{ $message }}</span> @enderror
            </div>

            {{-- Jumlah --}}
            <div>
                <label for="jumlah" class="block text-sm font-medium text-gray-700">Jumlah</label>
                <input type="number" id="jumlah" wire:model="jumlah"
                    class="mt-1 block w-full border border-gray-300 rounded px-2 py-1" min="1">
                @error('jumlah') <span class="text-red-500 text-sm mt-1 block">{{ $message }}</span> @enderror
            </div>

            {{-- Harga Beli --}}
            <div>
                <label for="harga_beli" class="block text-sm font-medium text-gray-700">Harga Beli</label>
                <input type="number" id="harga_beli" wire:model="harga_beli"
                    class="mt-1 block w-full border border-gray-300 rounded px-2 py-1" min="0" step="any">
                @error('harga_beli') <span class="text-red-500 text-sm mt-1 block">{{ $message }}</span> @enderror
            </div>

            {{-- Harga Jual --}}
            <div>
                <label for="harga_jual" class="block text-sm font-medium text-gray-700">Harga Jual</label>
                <input type="number" id="harga_jual" wire:model="harga_jual"
                    class="mt-1 block w-full border border-gray-300 rounded px-2 py-1" min="0" step="any">
                @error('harga_jual') <span class="text-red-500 text-sm mt-1 block">{{ $message }}</span> @enderror
            </div>

            {{-- Expired --}}
            <div>
                <label for="expired_at" class="block text-sm font-medium text-gray-700">Expired</label>
                <input type="date" id="expired_at" wire:model="expired_at"
                    class="mt-1 block w-full border border-gray-300 rounded px-2 py-1">
                @error('expired_at') <span class="text-red-500 text-sm mt-1 block">{{ $message }}</span> @enderror
            </div>

            {{-- Tombol Simpan --}}
            <div>
                <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded">
                    {{ $editItemId ? 'Update' : 'Simpan' }}
                </button>
            </div>
        </div>
    </form>

    {{-- Tabel Item --}}
    <div class="overflow-x-auto">
        <table class="min-w-full border border-gray-300 text-center">
            <thead class="bg-blue-600 text-white">
                <tr>
                    <th class="px-4 py-2 border">No</th>
                    <th class="px-4 py-2 border">Produk</th>
                    <th class="px-4 py-2 border">Jumlah</th>
                    <th class="px-4 py-2 border">Harga Beli</th>
                    <th class="px-4 py-2 border">Harga Jual</th>
                    <th class="px-4 py-2 border">Expired</th>
                    <th class="px-4 py-2 border">Aksi</th>
                </tr>
            </thead>
            <tbody>
                @forelse ($items as $key => $item)
                    <tr class="{{ $key % 2 == 0 ? 'bg-gray-50' : 'bg-white' }}">
                        <td class="px-4 py-2 border">{{ $key + 1 }}</td>
                        <td class="px-4 py-2 border">{{ $item->produk->nama_produk ?? '-' }}</td>
                        <td class="px-4 py-2 border">{{ $item->jumlah }}</td>
                        <td class="px-4 py-2 border">Rp{{ number_format($item->harga_beli, 0, ',', '.') }}</td>
                        <td class="px-4 py-2 border">Rp{{ number_format($item->harga_jual, 0, ',', '.') }}</td>
                        <td class="px-4 py-2 border">
                            {{ $item->expired_at ? \Carbon\Carbon::parse($item->expired_at)->format('d M Y') : '-' }}
                        </td>
                        <td class="px-4 py-2 border space-x-2">
                            <button wire:click="editItem({{ $item->id }})"
                                class="text-blue-600 hover:underline">Edit</button>
                            <button wire:click="delete({{ $item->id }})" class="text-red-600 hover:underline">Hapus</button>
                        </td>
                    </tr>
                @empty
                    <tr>
                        <td colspan="7" class="py-4 text-gray-500">Belum ada item</td>
                    </tr>
                @endforelse
            </tbody>
        </table>
    </div>
