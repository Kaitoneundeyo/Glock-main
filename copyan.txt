<?php

// 1. Tabel Stok Keluar (untuk tracking pengeluaran stok selain penjualan)
Schema::create('stok_keluars', function (Blueprint $table) {
    $table->id();
    $table->string('no_referensi')->unique(); // nomor referensi keluar
    $table->dateTime('tanggal_keluar')->default(now());
    $table->enum('jenis_keluar', ['rusak', 'expired', 'hilang', 'retur', 'sample', 'lainnya']);
    $table->text('keterangan')->nullable(); // keterangan detail
    $table->foreignId('user_id')->constrained('users')->onDelete('cascade'); // user yang mencatat
    $table->timestamps();
});

// 2. Tabel Detail Item Stok Keluar
Schema::create('stok_keluar_items', function (Blueprint $table) {
    $table->id();
    $table->foreignId('stok_keluar_id')->constrained('stok_keluars')->onDelete('cascade');
    $table->foreignId('produk_id')->constrained('produk')->onDelete('cascade');
    $table->integer('jumlah');
    $table->decimal('nilai_kerugian', 12, 2)->default(0); // nilai kerugian jika ada
    $table->text('catatan')->nullable(); // catatan khusus per item
    $table->timestamps();
});

// 3. Tabel Laporan Harian (summary per hari)
Schema::create('laporan_harians', function (Blueprint $table) {
    $table->id();
    $table->date('tanggal');

    // Data Penjualan
    $table->integer('total_transaksi')->default(0);
    $table->decimal('total_penjualan', 15, 2)->default(0);
    $table->decimal('total_keuntungan', 15, 2)->default(0); // gross profit

    // Data Stok Masuk
    $table->integer('total_stok_masuk')->default(0); // jumlah item masuk
    $table->decimal('nilai_stok_masuk', 15, 2)->default(0); // nilai pembelian

    // Data Stok Keluar
    $table->integer('total_stok_keluar')->default(0); // jumlah item keluar
    $table->decimal('nilai_stok_keluar', 15, 2)->default(0); // nilai kerugian

    // Data Produk
    $table->integer('produk_terjual')->default(0); // jumlah varian produk yang terjual
    $table->integer('stok_tersedia')->default(0); // total stok akhir hari

    // Data User/Aktivitas
    $table->integer('user_aktif')->default(0); // jumlah user yang bertransaksi
    $table->integer('produk_baru')->default(0); // produk baru ditambahkan

    $table->foreignId('created_by')->nullable()->constrained('users')->onDelete('set null');
    $table->timestamps();

    // Index untuk performa query
    $table->unique('tanggal');
    $table->index(['tanggal', 'total_penjualan']);
});

// 4. Tabel Laporan Bulanan (summary per bulan)
Schema::create('laporan_bulanans', function (Blueprint $table) {
    $table->id();
    $table->year('tahun');
    $table->tinyInteger('bulan'); // 1-12

    // Ringkasan Penjualan
    $table->integer('total_transaksi_bulan')->default(0);
    $table->decimal('total_penjualan_bulan', 15, 2)->default(0);
    $table->decimal('total_keuntungan_bulan', 15, 2)->default(0);
    $table->decimal('rata_rata_penjualan_harian', 15, 2)->default(0);

    // Ringkasan Pembelian/Stok Masuk
    $table->integer('total_pembelian_bulan')->default(0);
    $table->decimal('nilai_pembelian_bulan', 15, 2)->default(0);

    // Ringkasan Stok Keluar
    $table->integer('total_stok_keluar_bulan')->default(0);
    $table->decimal('nilai_kerugian_bulan', 15, 2)->default(0);

    // Analisis Produk
    $table->json('top_produk_terjual')->nullable(); // top 10 produk terlaris
    $table->json('produk_slow_moving')->nullable(); // produk yang jarang terjual
    $table->integer('total_sku_aktif')->default(0); // jumlah SKU aktif

    // Analisis Customer
    $table->integer('total_customer_aktif')->default(0);
    $table->integer('customer_baru')->default(0);
    $table->decimal('rata_rata_nilai_transaksi', 12, 2)->default(0);

    // Metrics Operasional
    $table->decimal('tingkat_perputaran_stok', 8, 4)->default(0); // inventory turnover
    $table->integer('hari_kerja')->default(0); // jumlah hari aktif transaksi
    $table->decimal('growth_rate', 8, 4)->default(0); // pertumbuhan vs bulan sebelumnya

    $table->foreignId('created_by')->nullable()->constrained('users')->onDelete('set null');
    $table->timestamps();

    // Index dan constraint
    $table->unique(['tahun', 'bulan']);
    $table->index(['tahun', 'bulan', 'total_penjualan_bulan']);
});

// 5. Tabel untuk tracking inventory movement (opsional tapi sangat berguna)
Schema::create('inventory_movements', function (Blueprint $table) {
    $table->id();
    $table->foreignId('produk_id')->constrained('produk')->onDelete('cascade');
    $table->enum('movement_type', ['masuk', 'keluar', 'adjustment']); // jenis pergerakan
    $table->string('reference_type'); // 'sale', 'stok_masuk', 'stok_keluar', 'adjustment'
    $table->unsignedBigInteger('reference_id'); // ID dari tabel referensi
    $table->integer('quantity_before'); // stok sebelum
    $table->integer('quantity_change'); // perubahan (+ atau -)
    $table->integer('quantity_after'); // stok sesudah
    $table->text('notes')->nullable();
    $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
    $table->timestamps();

    // Index untuk performa
    $table->index(['produk_id', 'created_at']);
    $table->index(['reference_type', 'reference_id']);
    $table->index('movement_type');
});

// 6. Tabel untuk menyimpan konfigurasi laporan
Schema::create('laporan_configs', function (Blueprint $table) {
    $table->id();
    $table->string('config_key')->unique();
    $table->json('config_value');
    $table->text('description')->nullable();
    $table->boolean('is_active')->default(true);
    $table->timestamps();
});

?>

/*
PENJELASAN RELASI ANTAR TABEL:

=== RELASI EXISTING ===
1. categories (1) -> produk (many) : One-to-Many
2. produk (1) -> stok_masuk_items (many) : One-to-Many
3. produk (1) -> harga_produk (many) : One-to-Many
4. produk (1) -> gambar_produks (many) : One-to-Many
5. produk (1) -> cart_items (many) : One-to-Many
6. produk (1) -> sale_items (many) : One-to-Many
7. suppliers (1) -> stok_masuks (many) : One-to-Many
8. stok_masuks (1) -> stok_masuk_items (many) : One-to-Many
9. users (1) -> cart_items (many) : One-to-Many
10. users (1) -> sales (many) : One-to-Many
11. sales (1) -> sale_items (many) : One-to-Many
12. users (1) -> stok_keluars (many) : One-to-Many
13. stok_keluars (1) -> stok_keluar_items (many) : One-to-Many
14. produk (1) -> stok_keluar_items (many) : One-to-Many

=== RELASI TABEL BARU ===
15. users (1) -> laporan_harians (many) : One-to-Many (created_by)
16. users (1) -> laporan_bulanans (many) : One-to-Many (created_by)
17. produk (1) -> inventory_movements (many) : One-to-Many
18. users (1) -> inventory_movements (many) : One-to-Many

=== FLOW DATA ===
Stok Masuk: suppliers -> stok_masuks -> stok_masuk_items -> update produk.stok
Penjualan: users -> sales -> sale_items -> kurangi produk.stok
Stok Keluar: users -> stok_keluars -> stok_keluar_items -> kurangi produk.stok
Laporan: Semua aktivitas terekam dalam laporan_harians & laporan_bulanans
Tracking: Semua pergerakan stok tercatat di inventory_movements
*/
